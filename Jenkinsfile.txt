pipeline {
    agent any
    
    environment {
        VENV = 'myenv'                      // Name of your virtual environment
        DOCKER_REGISTRY = 'dockerhub_user'  // Docker registry username or hostname
        IMAGE_NAME = 'myapp'                // Docker image name
        KUBE_NAMESPACE = 'default'          // Kubernetes namespace
        KUBE_DEPLOYMENT = 'myapp-deployment'// Kubernetes deployment name
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Checkout your repository containing main.py, database.py, etc.
                git 'https://github.com/your/repository.git'
            }
        }
        
        stage('Setup Environment') {
            steps {
                // Install Python and create virtual environment
                sh '''
                    python3 -m venv ${VENV}
                    source ${VENV}/bin/activate
                    pip install -r requirements.txt
                '''
            }
        }
        
        stage('Run Tests (if any)') {
            steps {
                // Run unit tests or other tests if applicable
                sh 'pytest'  // Adjust command as per your testing framework
            }
        }
        
        stage('Build Docker Image') {
            steps {
                // Build Docker image
                sh "docker build -t ${DOCKER_REGISTRY}/${IMAGE_NAME}:${BUILD_NUMBER} ."
            }
        }
        
        stage('Push to Docker Registry') {
            steps {
                // Push Docker image to registry
                sh "docker login -u ${DOCKER_REGISTRY_USERNAME} -p ${DOCKER_REGISTRY_PASSWORD}"
                sh "docker push ${DOCKER_REGISTRY}/${IMAGE_NAME}:${BUILD_NUMBER}"
            }
        }
        
        stage('Deploy to Kubernetes') {
            steps {
                // Deploy to Kubernetes
                script {
                    // Replace with your Kubernetes deployment YAML or Helm chart commands
                    sh """
                        kubectl apply -f deployment.yml -n ${KUBE_NAMESPACE}
                        kubectl rollout status deployment/${KUBE_DEPLOYMENT} -n ${KUBE_NAMESPACE}
                    """
                }
            }
        }
    }
    
    post {
        always {
            // Clean up (optional): Deactivate virtual environment
            sh "deactivate"
        }
    }
}
